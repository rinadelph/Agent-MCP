[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "agent-mcp"
version = "2.5.0"
description = "AgentMCP v2.5 - Enhanced multi-agent system with tmux integration and worktree support"
authors = [
    {name = "Luis Alejandro Rincon", email = "alejandro@rinconnect.com"},
]
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "anyio",
    "click",
    "openai",
    "starlette",
    "uvicorn",
    "jinja2",
    "python-dotenv",
    "sqlite-vec",
    "httpx",
    "mcp>=1.8.1",
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-asyncio",
    "black",
    "isort",
]

[tool.setuptools]
py-modules = []

[tool.setuptools.packages.find]
where = ["."]
include = ["agent_mcp*"]

[tool.setuptools.package-data]
"agent_mcp" = ["py.typed", "templates/**/*", "static/**/*"]

[tool.rye]
managed = true
dev-dependencies = [
    "pytest>=8.3.2",
    "ruff>=0.5.5",
]

[tool.rye.scripts]
# Default run, assumes server mode
run = { cmd = "uv run -m agent-mcp.cli -- server --port 8080 --project-dir ." }
start = { cmd = "uv run -m agent-mcp.cli -- server --port 8080 --project-dir ." }
cli = { cmd = "uv run -m agent-mcp.cli --" }
test = { cmd = "pytest" }
lint = { cmd = "ruff check ." }
format = { cmd = "ruff format ." }
index = { cmd = "uv run -m agent-mcp.features.rag.indexing -- --project-dir ." }

[tool.black]
line-length = 88
target-version = ["py310"]

[tool.isort]
profile = "black"
line_length = 88

[tool.ruff]
# ... existing code ...

[tool.ruff.lint.isort]
known-first-party = ["agent-mcp"]
# ... existing code ...
